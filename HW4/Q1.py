# -*- coding: utf-8 -*-
"""Q1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15T6tQT6m7TwqukFHFCxbJ41lmgAtMH0i
"""

#Question 1

import random
import requests

API_URL = 'http://cryptlygos.pythonanywhere.com'

my_id = 26628   ## Change this to your ID

endpoint = '{}/{}/{}'.format(API_URL, "RSA_Oracle", my_id )
response = requests.get(endpoint) 	
c, N, e = 0,0,0 
if response.ok:	
  res = response.json()
  print(res)
  c, N, e = res['c'], res['N'], res['e']    #get c, N, e
else: print(response.json())

######
#c = 6850041245076098620324426208284809865598841760601355452569737339927351640266063051633031519540852881248276490971209933718577133836504579781727541727907393107116722045684457705917182924930498126749834641777073669191391684909670209826184198364640308696309963363803404264413377922038109665920190322658776246031665560823913075896351811982752212355209132165312413531911427515411470755798203380954840262527373829334705065690391826299834426989543935194953188537288642925748676255132959650599692084424253943038794750498705386083735575602936006995765461839110456977783165336035330964125304394828315105519941869301711909130317
#N = 26570927162480737628985979203754072331946194492775210615224297972011744173941901816424061641629410774614008488685919271530391604171337234198111376684967784318130245430521386636931825815033716005580574144536158735220817017331513776598639232191685378945108934070246971078593116594187093852985690509208868473031905575752098253618707363954507549299255829726753255010984781668655145200872618181467368237195042352624541163587556719474038165282251445151777510755393767011091201655442513743652421000131775919984218048130718796389532361194191968866028104038025606263666775683757562416321168778465969563785651946597616485652527
#e = 65537

import DSA

x = random.randint(pow(2,8,N),pow(2,9,N)) #picking a random integer
g = DSA.egcd(x,N)[0]
while g != 1: #pick the integer again if it's gcd(x,N) is not 1 (not relatively prime)
  x = random.randint(pow(2,8,N),pow(2,9,N))
  g = DSA.egcd(x,N)[0]
print("x is", x)

x_inverse = DSA.modinv(x,N) #calculating x^-1
print("x inverse is", x_inverse)

c_ = (c * pow(x,e,N)) % N #calculating c_
print("c_ is", c_)

###### Query Oracle it will return corresponding plaintext
endpoint = '{}/{}/{}/{}'.format(API_URL, "RSA_Oracle_query", my_id, c_)
response = requests.get(endpoint) 	
if(response.ok): m_ = (response.json()['m_'])
else:print(response)

####
print("m_ is", m_)
m = (m_ * x_inverse) % N #computing m by m_ * x^-1
res = int(m)
res = res.to_bytes((res.bit_length()+7)//8, byteorder='big') #converting to bytes
print("m is", res)

###Send your answer to the server.
endpoint = '{}/{}/{}/{}'.format(API_URL, "RSA_Oracle_checker", my_id, res)
response = requests.put(endpoint)
print(response.json())

#ans = pow(m,e,N) #checking the answer
#print(ans)
#print(ans == c)