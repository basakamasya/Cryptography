# -*- coding: utf-8 -*-
"""hw1_q7.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1famCj0aUPrsyYGa4PvSGGvkvEPdIVxOh
"""

#Question 7 (Bonus)
ciphertext7 = "FwgataxPtxohlihvabawljwgvmjsnwfwtfiapqzlziymrqgvuuwfpxjwpbkjxlnlzfptfnoqewgwQoifmowlPbdgmgxvqentlykbabnjhvcfekghnizlfqblidbeayzjgzbwxsqwmlgglbtqgyxlipPhofvvsktfCsmfureculywndxlzuvmzczxxivwQomdmowlPbgzgoblzqdxjCswasBkylbtmudujsdcbfmvnygeazlpqzxoblzqQowmwmzblgghvkgxslzemamwxapquwwmazagxvnomybhlustkGhmqvvfnbfxhvqevgoubdgpghanuvwshvbtmkkbvzqBaamjqfgpafsixetqmwcdanwsvcKwndfdixsmzyziymllllmfazjidwxlbfnomeifwhlqspuglowallloyvsztqcubtmlwmhuqphmmlaKwndfhtiirkyulgxbfnoqekblsKwzbagjlnazmzcuoemekydpqzxlblzqaggmoqbnhjsvcfpxjyzvazhsxUwibasnfwgdxouzbqlrgoytunxzyymuvmzczayiedwvzzmkqibdqlxknywkmwanldqzroblzqqglbleazev"
ciphertext7 = ciphertext7.upper()

#taken from helper
# You can use the the following variables for encoding an decoding of English letters    
lowercase = {'a':0, 'b':1, 'c':2, 'd':3, 'e':4, 'f':5, 'g':6, 'h':7, 'i':8,
         'j':9, 'k':10, 'l':11, 'm':12, 'n':13, 'o':14, 'p':15, 'q':16,
         'r':17, 's':18,  't':19, 'u':20, 'v':21, 'w':22, 'x':23, 'y':24,
         'z':25}

uppercase ={'A':0, 'B':1, 'C':2, 'D':3, 'E':4, 'F':5, 'G':6, 'H':7, 'I':8,
         'J':9, 'K':10, 'L':11, 'M':12, 'N':13, 'O':14, 'P':15, 'Q':16,
         'R':17, 'S':18,  'T':19, 'U':20, 'V':21, 'W':22, 'X':23, 'Y':24,
         'Z':25}

inv_lowercase = {0:'a', 1:'b', 2:'c', 3:'d', 4:'e', 5:'f', 6:'g', 7:'h', 8:'i',
         9:'j', 10:'k', 11:'l', 12:'m', 13:'n', 14:'o', 15:'p', 16:'q',
         17:'r', 18:'s', 19:'t', 20:'u', 21:'v', 22:'w', 23:'x', 24:'y',
         25:'z'}

inv_uppercase = {0:'A', 1:'B', 2:'C', 3:'D', 4:'E', 5:'F', 6:'G', 7:'H',
                 8:'I', 9:'J', 10:'K', 11:'L', 12:'M', 13:'N', 14:'O', 15:'P',
                 16:'Q', 17:'R', 18:'S', 19:'T', 20:'U', 21:'V', 22:'W', 23:'X',
                 24:'Y', 25:'Z'}

def Shift_Dec(ctext, key): #function for shift cipher decryption
    clen = len(ctext)
    ptext = ''
    for i in range (0,clen): #for each letter in ciphertext
        letter = ctext[i]
        if letter in uppercase:
            poz = uppercase[letter] #get the encoding for that letter
            poz = (poz - key) % 26 #add the key and take its modulus 26 since there are 26 letters in the English alphabet
            ptext += inv_uppercase[poz] #add the corresponsing letter to plaintext
        else:
            ptext += ctext[i]
    return ptext

def letter_count(cipher): #letter counts for frequency analysis
  d = {}
  for i in cipher:
    if i not in d:
        d[i] = 1
    else:
      d[i] += 1
  return d

def shifted_coincidences(ciphertext): #shifting the ciphertext and counting the same letters in same indexes to determine the key length
  shifted = ciphertext
  countdic = {}
  count = 0
  for i in range(1,25):
    shifted = "_" + shifted[0:len(ciphertext)]
    for j in range(len(ciphertext)):
        if ciphertext[j] == shifted[j]:
          count += 1
    countdic[i] = count
    count = 0
  return countdic

print("Coincidence numbers for shifted amounts are:", shifted_coincidences(ciphertext7))

sub1 = sub2 = sub3 = sub4 = sub5 = sub6 = sub7 = ""

for x in range(len(ciphertext7)): #dividing the ciphertext into 7 sub-ciphertexts
  if (x+1) % 7 == 1:
    sub1 = sub1 + ciphertext7[x]
  elif (x+1) % 7 == 2:
    sub2 = sub2 + ciphertext7[x]
  elif (x+1) % 7 == 3:
    sub3 = sub3 + ciphertext7[x]
  elif (x+1) % 7 == 4:
    sub4 = sub4 + ciphertext7[x]
  elif (x+1) % 7 == 5:
    sub5 = sub5 + ciphertext7[x]
  elif (x+1) % 7 == 6:
    sub6 = sub6 + ciphertext7[x]
  elif (x+1) % 7 == 0:
    sub7 = sub7 + ciphertext7[x]

print("Letter frequencies in sub1 are", letter_count(sub1))
print("Letter frequencies in sub2 are", letter_count(sub2))
print("Letter frequencies in sub3 are", letter_count(sub3))
print("Letter frequencies in sub4 are", letter_count(sub4))
print("Letter frequencies in sub5 are", letter_count(sub5))
print("Letter frequencies in sub6 are", letter_count(sub6))
print("Letter frequencies in sub7 are", letter_count(sub7))

plain1 = Shift_Dec(sub1,7) #decrypting each sub-ciphertexts with respect to corresponding keys found from frequency analysis
plain2 = Shift_Dec(sub2,8)
plain3 = Shift_Dec(sub3,12)
plain4 = Shift_Dec(sub4,8)
plain5 = Shift_Dec(sub5,19)
plain6 = Shift_Dec(sub6,18)
plain7 = Shift_Dec(sub7,20)
plain = ""

for i in range(len(plain7)): #putting the sub-plaintexts back together
  plain = plain + plain1[i]
  plain = plain + plain2[i]
  plain = plain + plain3[i]
  plain = plain + plain4[i]
  plain = plain + plain5[i]
  plain = plain + plain6[i]
  plain = plain + plain7[i]
i += 1
plain = plain + plain1[i] + plain2[i] + plain3[i] + plain4[i] + plain5[i] + plain6[i]

print(plain)
plain = "You said: I'll go to another country, go to another shore, find another city better than this one. Whatever I try to do is fated to turn out wrong and my heart lies buried like something dead. How long can I let my mind moulder in this place? Wherever I turn, wherever I look, I see the black ruins of my life, here, where I've spent so many years, wasted them, destroyed them totally. You won't find a new country, won't find another shore. This city will always pursue you. You'll walk the same streets, grow old in the same neighborhoods, turn gray in these same houses. You'll always end up in this city. Don't hope for things elsewhere: There's no ship for you, there's no road. Now that you've wasted your life here, in this small corner, you've destroyed it everywhere in the world."
print(plain)